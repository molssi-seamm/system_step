name: Release

on:
  # GitHub has started calling new repo's first branch "main" https://github.com/github/renaming
  # Existing codes likely still have "master" as the primary branch
  # Both are tracked here to keep legacy and new codes working
  release:
    types: [published]
    branches:
      - "master"
      - "main"

jobs:
  lint-docs:
    name: Lint-Docs ubuntu-latest Py3.8
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    # More info on options: https://github.com/conda-incubator/setup-miniconda
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.8
        environment-file: devtools/conda-envs/test_env.yaml
        activate-environment: test
        auto-update-conda: false
        auto-activate-base: false
        show-channel-urls: true
    - name: Install package
      # conda setup requires this special shell
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps
        conda list
    - name: Run linters
      shell: bash -l {0}
      run: |
        flake8 system_step tests
        yapf --diff --recursive system_step tests
    - name: Build documentation
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash -l {0}
      run: |
        docs/buildDocs.sh
      
  test:
    name: Test ${{ matrix.os }} Py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    needs: lint-docs
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: devtools/conda-envs/test_env.yaml
        activate-environment: test
        auto-update-conda: false
        auto-activate-base: false
        show-channel-urls: true
    - name: Install package
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps
        conda list
    - name: Run tests
      shell: bash -l {0}
      run: |
        pytest -v --cov=system_step --cov-report=xml --color=yes tests/

    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}

  deploy:
    name: PyPi ubuntu-latest Py3.8
    # Run only for tagged releases.
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: [lint-docs, test]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install package
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps
        conda list
    - name: Install pypa/build
      run: |
        python -m pip install build --user
    - name: Build a binary wheel and a source tarball
      run: |
        python -m build --sdist --wheel --outdir dist/
        ls -l dist/
    - name: Publish distribution ðŸ“¦ to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/
        skip_existing: true
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_password }}
